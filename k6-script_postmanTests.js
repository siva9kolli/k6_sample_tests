// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    productId1: "",
    productId2: "",
    cartId: "",
    itemId: "",
    orderId: ""
  }
});

export default function() {
  postman[Request]({
    name: "GetAllProducts",
    id: "06056251-51a5-44b6-8188-313143e7915b",
    method: "GET",
    address: "{{endPoint}}/products",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.collectionVariables.set("productId1", pm.response.json()[0].id);
      pm.collectionVariables.set("productId2", pm.response.json()[1].id);
    }
  });

  postman[Request]({
    name: "CreateCart",
    id: "7eef415d-03ce-4952-88e5-3469087c8019",
    method: "POST",
    address: "{{endPoint}}/carts",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(201);
      });

      pm.collectionVariables.set("cartId", pm.response.json().cartId);
    }
  });

  postman[Request]({
    name: "AddItemToCart",
    id: "19bbde6e-0c40-49e9-9fa5-fbf78baa519b",
    method: "POST",
    address: "{{endPoint}}/carts/{{cartId}}/items",
    data: '{\n    "productId":"{{productId2}}",\n    "quantity" : 9\n}',
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(201);
      });

      pm.collectionVariables.set("itemId", pm.response.json().itemId);
    }
  });

  postman[Request]({
    name: "GetCartItems",
    id: "18139c66-b4fd-4248-b549-5834c8aa0821",
    method: "GET",
    address: "{{endPoint}}/carts/{{cartId}}/items",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "GenerateToken",
    id: "eaf9fcde-a147-4dd0-8f74-58852d16c6bc",
    method: "POST",
    address: "{{endPoint}}/api-clients",
    data:
      '{\n    "clientName":"{{$randomFirstName}}",\n    "clientEmail" : "siva{{$randomPhoneNumber}}@yopmail.com"\n}',
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(201);
      });

      pm.environment.set("accessToken", pm.response.json().accessToken);
    }
  });

  postman[Request]({
    name: "CreateAnOrder",
    id: "750dce89-a9f5-45e5-bd52-a7d42ccad4a5",
    method: "POST",
    address: "{{endPoint}}/orders",
    data:
      '{\n    "customerName": "{{$randomFullName}}",\n    "cartId" : "{{cartId}}"\n}',
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(201);
      });

      pm.collectionVariables.set("orderId", pm.response.json().orderId);
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("accessToken")}`;
    }
  });

  postman[Request]({
    name: "GetAllOrders",
    id: "f55c9eca-c69b-43ea-8892-0bd0df88b63d",
    method: "GET",
    address: "{{endPoint}}/orders",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(204);
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("accessToken")}`;
    }
  });
}
